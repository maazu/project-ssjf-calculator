import numba as nb
from numba import jit, cuda
import os
import sys
import numpy as np
# to measure exec time
from timeit import default_timer as timer
import sys
sys.float_info.max


# normal function to run on cpu


# function optimized to run on gpu

def initialise_file_content(file_path):
    # Open a file
    file = os.open(file_path, os.O_RDWR)

    # Reading text
    file_content = os.read(file, 10000000000000)
    file_content = file_content.decode()

    os.close(file)

    return file_content


@nb.njit(fastmath=True, parallel=True)
def factorial(x):
    n = 1
    for i in range(0, float(26659460589285984401941746677483330787277855649538101117326424845963077849075680085559401586497808072148653533979329971794137727475539471500999930181267759177119657990433837059755260443663254276163542676870070215415239489493869441257408034495460013469227507688242616001666788748221941724843861306959581301636181831375115619209581234207597849789500961938563351939594533782288543543413608831688186747069188530741608371601785447015275118023046800036041083717476598732804899456454354931816146086322308707619461370417101753518311626494121156142283409751685200114521179987259171102567152813030792021100047210557438999658829)):

        n *= i
    return n


if __name__ == "__main__":

    start = timer()

    start = timer()
    factorial(26659460589285984401941746677483330787277855649538101117326424845963077849075680085559401586497808072148653533979329971794137727475539471500999930181267759177119657990433837059755260443663254276163542676870070215415239489493869441257408034495460013469227507688242616001666788748221941724843861306959581301636181831375115619209581234207597849789500961938563351939594533782288543543413608831688186747069188530741608371601785447015275118023046800036041083717476598732804899456454354931816146086322308707619461370417101753518311626494121156142283409751685200114521179987259171102567152813030792021100047210557438999658829)
    print("with GPU:", timer()-start)
